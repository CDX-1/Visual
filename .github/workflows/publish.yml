name: Build and Publish to Github and Maven Central

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish'
        required: true
        default: '1.0.0'
      changelog:
        description: 'Changelog for the release'
        required: true
        default: ''

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Cache Gradle Dependencies
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Configure JReleaser
        run: ./gradlew jreleaserConfig

      - name: Publish
        run: ./gradlew publish

      - name: Full Release
        env:
          JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.JRELEASER_GPG_PUBLIC_KEY }}
          JRELEASER_GPG_SECRET_KEY: ${{ secrets.JRELEASER_GPG_SECRET_KEY }}
          JRELEASER_GPG_PASSPHRASE: ${{ secrets.JRELEASER_GPG_PASSPHRASE }}
          JRELEASER_MAVENCENTRAL_USERNAME: ${{ secrets.JRELEASER_MAVENCENTRAL_USERNAME }}
          JRELEASER_MAVENCENTRAL_PASSWORD: ${{ secrets.JRELEASER_MAVENCENTRAL_PASSWORD }}
        run: ./gradlew jreleaserFullRelease

      - name: Create Github Release and Upload Artifact
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION=${{ github.event.inputs.version }}
          CHANGELOG=${{ github.event.inputs.changelog }}
          
          RELEASE_RESPONSE=$(curl -s -X POST "https://api.github.com/repos/${{ github.repository }}/releases" \
            -H "Authorization: token $GITHUB_TOKEN" \
            -d @- <<EOF
          {
            "tag_name": "v$VERSION",
            "target_commitish": "main",
            "name": "Release v$VERSION",
            "body": "$CHANGELOG",
            "draft": false,
            "prerelease": false
          }
          EOF
          )
          
          RELEASE_ID=$(echo $RELEASE_RESPONSE | jq -r '.id')
          UPLOAD_URL=$(echo $RELEASE_RESPONSE | jq -r .upload_url | sed -e "s/{?name,label}//")
          
          curl -X POST -H "Authorization: token $GITHUB_TOKEN" \
                      -H "Content-Type: application/zip" \
                      --data-binary @build/libs/Visual-$VERSION.jar \
                      "$UPLOAD_URL?Visual-$VERSION.jar"